# 数据源集合
dataSources:
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/link?characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&serverTimezone=GMT%2B8
    username: root
    password: 12345678

rules:
  - !SHARDING
    tables:
      t_link:
        # 真实数据节点，比如数据库源以及数据库在数据库中真实存在的
        actualDataNodes: ds_0.t_link_${0..15}
        # 分表策略
        tableStrategy:
          # 用于单分片键的标准分片场景
          standard:
            # 分片键
            shardingColumn: gid
            # 分片算法，对应 rules[0].shardingAlgorithms
            shardingAlgorithmName: link_table_hash_mod
      t_link_goto:
        # 真实数据节点，比如数据库源以及数据库在数据库中真实存在的
        actualDataNodes: ds_0.t_link_goto_${0..15}
        # 分表策略
        tableStrategy:
          # 用于单分片键的标准分片场景
          standard:
            # 分片键
            shardingColumn: full_short_url
            # 分片算法，对应 rules[0].shardingAlgorithms
            shardingAlgorithmName: link_goto_table_hash_mod
      t_link_stats_today:
        # 真实数据节点，比如数据库源以及数据库在数据库中真实存在的
        actualDataNodes: ds_0.t_link_stats_today_${0..15}
        # 分表策略
        tableStrategy:
          # 用于单分片键的标准分片场景
          standard:
            # 分片键
            shardingColumn: gid
            # 分片算法，对应 rules[0].shardingAlgorithms
            shardingAlgorithmName: link_stats_today_hash_mod
    bindingTables:
      - t_link, t_link_stats_today
    # 分片算法
    shardingAlgorithms:
      # 数据表分片算法
      link_table_hash_mod:
        # 根据分片键 Hash 分片
        type: HASH_MOD
        # 分片数量
        props:
          sharding-count: 16
      # 数据表分片算法
      link_goto_table_hash_mod:
        # 根据分片键 Hash 分片
        type: HASH_MOD
        # 分片数量
        props:
          sharding-count: 16
      # 数据表分片算法
      link_stats_today_hash_mod:
        # 根据分片键 Hash 分片
        type: HASH_MOD
        # 分片数量
        props:
          sharding-count: 16
props:
  sql-show: true